{"version":3,"sources":["components/book.js","components/BookShelf.js","helpers/bookreads.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["Book","props","book","title","length","substring","checkTitle","volumeInfo","react_default","a","createElement","className","href","infoLink","target","rel","src","imageLinks","thumbnail","alt","authors","reduce","prev","author","publisher","BookShelf","books","map","index","components_book","key","moreBooksToLoad","onClick","loadMoreBooks","fetchData","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","searchString","endpoint","wrap","_context","next","concat","console","log","abrupt","fetch","then","res","json","data","items","catch","err","stop","_x","apply","this","arguments","Main","state","searchText","isLoading","booksLoaded","onChangeSearchInput","event","value","_this","setState","onSubmitSearchInput","preventDefault","sent","_this2","onSubmit","type","onChange","placeholder","components_BookShelf","Component","App","document","components_Main","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a2efb0b0.chunk.js","sourcesContent":["import React from 'react';      \r\n\r\nconst Book = (props) => {\r\n\r\n    const checkTitle = (title) => {\r\n        if (!title) return 'title unknown';\r\n        if (title.length > 30 ) {\r\n            return title.substring(0,20)+\"...\";\r\n        }\r\n        return title;\r\n    }\r\n\r\n    const { book } = props;\r\n    const title = checkTitle(book.volumeInfo.title);\r\n\r\n    return (\r\n        <li className='book'>\r\n            <a className=\"book__link\" href={book.volumeInfo.infoLink} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <div className=\"book__card\">\r\n                    <h3 className=\"book__title\">{title}</h3>\r\n                    <div className=\"book__body\">\r\n                        <div className='book__image-container'>\r\n                            <img\r\n                            className='book__image-thumbnail' \r\n                            src={book.volumeInfo.imageLinks && book.volumeInfo.imageLinks.thumbnail ? \r\n                            (book.volumeInfo.imageLinks.thumbnail):('https://via.placeholder.com/128X170?text=No%20Image')} \r\n                            alt={book.volumeInfo.title}/>\r\n                        </div>\r\n                        <div className=\"book-info__container\">\r\n                            <p className=\"book-info__text\"><strong>Author(s)</strong>: {book.volumeInfo.authors ? \r\n                                (book.volumeInfo.authors.reduce((prev, author)=> prev+', '+author))\r\n                                :('Unknown')}</p>\r\n                            <p className=\"book-info__text\"><strong>Published By:</strong> {book.volumeInfo.publisher ? (book.volumeInfo.publisher):('No information')}</p>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </a>\r\n            \r\n        </li>\r\n    );\r\n}\r\n\r\nexport default Book;","import React from 'react';\r\nimport Book from './book';\r\n\r\n\r\nconst BookShelf = (props) => {\r\n    const { books } = props;\r\n    return (\r\n        <div>\r\n           {books ? (\r\n            <div>\r\n                <ul  className='bookshelf'>\r\n                    {books.map((book, index) => (<Book key={index} book={book} />))}\r\n                </ul>\r\n                {props.moreBooksToLoad ? (<button className=\"btn\" onClick={props.loadMoreBooks}>Load More</button>):('')}\r\n            </div>\r\n            ):(\r\n            <div>\r\n            <h3 className=\"bookshelf__message\">There Are No Books To Display</h3>\r\n            </div>\r\n        )}\r\n        </div>\r\n    );      \r\n}\r\n\r\n\r\nexport default BookShelf;","const fetchData = async (searchString) => {\r\n    const endpoint = `https://mighty-bayou-34376.herokuapp.com/books/${searchString}`;\r\n    console.log(endpoint);\r\n    return fetch(endpoint)\r\n        .then(res => res.json())\r\n        .then(data => data.items)\r\n        .catch(err => console.log(err));\r\n};\r\n\r\n\r\nexport { fetchData };","import React, { Component } from 'react';\r\nimport BookShelf from './BookShelf';\r\nimport { fetchData } from '../helpers/bookreads';\r\n\r\nclass Main extends Component {\r\n\r\n    state = {\r\n        books: '',\r\n        searchText: '',\r\n        isLoading: false,\r\n        moreBooksToLoad: false,\r\n        booksLoaded: 0\r\n    }\r\n\r\n    onChangeSearchInput = (event) => {\r\n        const searchText = event.target.value;\r\n        this.setState({searchText});\r\n    }\r\n\r\n    onSubmitSearchInput = async (event) => {\r\n        this.setState({ isLoading:true})   \r\n        event.preventDefault();  \r\n        if (this.state.searchText) {\r\n            const books = await fetchData(this.state.searchText);\r\n            if (books) {\r\n                return this.setState({ books, isLoading: false });\r\n            } \r\n        }\r\n        this.setState({ books: '', isLoading: false });\r\n    }\r\n\r\n    // loadMoreBooks = async () => {\r\n    //     this.setState({ isLoading:true})   \r\n    //     if (this.state.searchText) {\r\n    //         const books = await fetchMoreData(this.state.searchText);\r\n    //         if (books) {\r\n    //             return this.setState({ books, isLoading: false });\r\n    //         } \r\n    //     }\r\n    //     this.setState({ books: '', isLoading: false });\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <h1 className=\"project__title\">Google Books</h1>\r\n                <form \r\n                    className=\"books__search-form\"\r\n                    onSubmit={(event) => this.onSubmitSearchInput(event)}>\r\n                    <input type=\"text\"\r\n                    className=\"books__search-box\" \r\n                    onChange={(event) => this.onChangeSearchInput(event)}\r\n                    value = {this.state.searchText}\r\n                    placeholder=\"Search for Books here...\"\r\n                    />\r\n                    <button className=\"btn btn--submit\" type=\"submit\">Search</button>\r\n                </form>\r\n                {this.state.isLoading ? \r\n                    (<h3 className=\"loading-message\">Loading...</h3>):\r\n                    (<BookShelf books={this.state.books}/>)}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Main;","import React, { Component } from 'react';\r\nimport Main from './components/Main';\r\nimport './css/main.css'\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    document.title=\"Google Books Search\"\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Main />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}